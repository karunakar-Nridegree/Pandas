{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPIYWhakXI3ERaGdM9Awqwi",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/karunakar-Nridegree/Pandas/blob/main/Testing%20Data%20Operations\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "TH_91A7OODbk"
      },
      "outputs": [],
      "source": [
        "from google.colab import drive"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GGl7yZaug_Jj",
        "outputId": "9fd1f0cf-e9b2-4cda-8265-65ee0cbafa17"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "Yzb3yzXRhs4M"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data = {\n",
        "    'Name': [\n",
        "        'Alice', 'Bob', 'Charlie', 'David', 'Eva', 'Frank', 'Grace', 'Helen', 'Ian', 'Jane',\n",
        "        'Karl', 'Laura', 'Mike', 'Nina', 'Oscar', 'Paula', 'Quentin', 'Rachel', 'Steve', 'Tina',\n",
        "        'Uma', 'Victor', 'Wendy', 'Xander', 'Yara', 'Zane'\n",
        "    ],\n",
        "    'Department': [\n",
        "        'HR', 'IT', 'Finance', 'IT', 'HR', 'Finance', 'IT', 'Marketing', 'Sales', 'HR',\n",
        "        'IT', 'Finance', 'Sales', 'Marketing', 'IT', 'HR', 'Finance', 'Sales', 'IT', 'Marketing',\n",
        "        'HR', 'Finance', 'Sales', 'IT', 'Marketing', 'Finance'\n",
        "    ],\n",
        "    'Salary': [\n",
        "        50000, 60000, 55000, 70000, 48000, 62000, 65000, 52000, 58000, 51000,\n",
        "        75000, 53000, 60000, 57000, 67000, 49500, 61000, 59000, 72000, 54000,\n",
        "        47000, 56000, 61000, 68000, 55000, 64000\n",
        "    ],\n",
        "    'Join_Date': [\n",
        "        '2020-05-21', '2019-03-15', '2021-07-10', '2018-11-01', '2022-01-05', '2017-09-12',\n",
        "        '2020-06-30', '2019-08-20', '2021-02-11', '2020-12-01', '2016-04-25', '2019-11-15',\n",
        "        '2020-03-03', '2022-04-10', '2018-07-18', '2017-10-22', '2015-05-09', '2020-09-14',\n",
        "        '2021-01-19', '2016-12-30', '2023-01-11', '2018-02-27', '2019-06-06', '2020-08-08',\n",
        "        '2021-03-22', '2017-01-17'\n",
        "    ]\n",
        "}"
      ],
      "metadata": {
        "id": "-4h0A_WthVL-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 884
        },
        "collapsed": true,
        "id": "7lLC6dTRidVO",
        "outputId": "5e89c942-259a-45c6-a7b2-b31ef2862a92"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Name Department  Salary  Join_Date  Years_with_Company\n",
              "0   Quentin    Finance   61000 2015-05-09                  10\n",
              "1      Tina  Marketing   54000 2016-12-30                   9\n",
              "2      Karl         IT   75000 2016-04-25                   9\n",
              "3      Zane    Finance   64000 2017-01-17                   8\n",
              "4     Paula         HR   49500 2017-10-22                   8\n",
              "5     Frank    Finance   62000 2017-09-12                   8\n",
              "6     David         IT   70000 2018-11-01                   7\n",
              "7    Victor    Finance   56000 2018-02-27                   7\n",
              "8     Oscar         IT   67000 2018-07-18                   7\n",
              "9     Wendy      Sales   61000 2019-06-06                   6\n",
              "10    Helen  Marketing   52000 2019-08-20                   6\n",
              "11    Laura    Finance   53000 2019-11-15                   6\n",
              "12      Bob         IT   60000 2019-03-15                   6\n",
              "13   Xander         IT   68000 2020-08-08                   5\n",
              "14   Rachel      Sales   59000 2020-09-14                   5\n",
              "15    Alice         HR   50000 2020-05-21                   5\n",
              "16     Mike      Sales   60000 2020-03-03                   5\n",
              "17     Jane         HR   51000 2020-12-01                   5\n",
              "18    Grace         IT   65000 2020-06-30                   5\n",
              "19    Steve         IT   72000 2021-01-19                   4\n",
              "20      Ian      Sales   58000 2021-02-11                   4\n",
              "21  Charlie    Finance   55000 2021-07-10                   4\n",
              "22     Yara  Marketing   55000 2021-03-22                   4\n",
              "23      Eva         HR   48000 2022-01-05                   3\n",
              "24     Nina  Marketing   57000 2022-04-10                   3\n",
              "25      Uma         HR   47000 2023-01-11                   2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-65c1b697-a279-4880-8d03-10e4bbf39532\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Name</th>\n",
              "      <th>Department</th>\n",
              "      <th>Salary</th>\n",
              "      <th>Join_Date</th>\n",
              "      <th>Years_with_Company</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Quentin</td>\n",
              "      <td>Finance</td>\n",
              "      <td>61000</td>\n",
              "      <td>2015-05-09</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Tina</td>\n",
              "      <td>Marketing</td>\n",
              "      <td>54000</td>\n",
              "      <td>2016-12-30</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Karl</td>\n",
              "      <td>IT</td>\n",
              "      <td>75000</td>\n",
              "      <td>2016-04-25</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Zane</td>\n",
              "      <td>Finance</td>\n",
              "      <td>64000</td>\n",
              "      <td>2017-01-17</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Paula</td>\n",
              "      <td>HR</td>\n",
              "      <td>49500</td>\n",
              "      <td>2017-10-22</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Frank</td>\n",
              "      <td>Finance</td>\n",
              "      <td>62000</td>\n",
              "      <td>2017-09-12</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>David</td>\n",
              "      <td>IT</td>\n",
              "      <td>70000</td>\n",
              "      <td>2018-11-01</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Victor</td>\n",
              "      <td>Finance</td>\n",
              "      <td>56000</td>\n",
              "      <td>2018-02-27</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Oscar</td>\n",
              "      <td>IT</td>\n",
              "      <td>67000</td>\n",
              "      <td>2018-07-18</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Wendy</td>\n",
              "      <td>Sales</td>\n",
              "      <td>61000</td>\n",
              "      <td>2019-06-06</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Helen</td>\n",
              "      <td>Marketing</td>\n",
              "      <td>52000</td>\n",
              "      <td>2019-08-20</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Laura</td>\n",
              "      <td>Finance</td>\n",
              "      <td>53000</td>\n",
              "      <td>2019-11-15</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bob</td>\n",
              "      <td>IT</td>\n",
              "      <td>60000</td>\n",
              "      <td>2019-03-15</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Xander</td>\n",
              "      <td>IT</td>\n",
              "      <td>68000</td>\n",
              "      <td>2020-08-08</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Rachel</td>\n",
              "      <td>Sales</td>\n",
              "      <td>59000</td>\n",
              "      <td>2020-09-14</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Alice</td>\n",
              "      <td>HR</td>\n",
              "      <td>50000</td>\n",
              "      <td>2020-05-21</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Mike</td>\n",
              "      <td>Sales</td>\n",
              "      <td>60000</td>\n",
              "      <td>2020-03-03</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Jane</td>\n",
              "      <td>HR</td>\n",
              "      <td>51000</td>\n",
              "      <td>2020-12-01</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Grace</td>\n",
              "      <td>IT</td>\n",
              "      <td>65000</td>\n",
              "      <td>2020-06-30</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Steve</td>\n",
              "      <td>IT</td>\n",
              "      <td>72000</td>\n",
              "      <td>2021-01-19</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Ian</td>\n",
              "      <td>Sales</td>\n",
              "      <td>58000</td>\n",
              "      <td>2021-02-11</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Charlie</td>\n",
              "      <td>Finance</td>\n",
              "      <td>55000</td>\n",
              "      <td>2021-07-10</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Yara</td>\n",
              "      <td>Marketing</td>\n",
              "      <td>55000</td>\n",
              "      <td>2021-03-22</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Eva</td>\n",
              "      <td>HR</td>\n",
              "      <td>48000</td>\n",
              "      <td>2022-01-05</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Nina</td>\n",
              "      <td>Marketing</td>\n",
              "      <td>57000</td>\n",
              "      <td>2022-04-10</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Uma</td>\n",
              "      <td>HR</td>\n",
              "      <td>47000</td>\n",
              "      <td>2023-01-11</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-65c1b697-a279-4880-8d03-10e4bbf39532')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-65c1b697-a279-4880-8d03-10e4bbf39532 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-65c1b697-a279-4880-8d03-10e4bbf39532');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8dde36eb-6b6c-4ac2-ad4d-16005c47e8c9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8dde36eb-6b6c-4ac2-ad4d-16005c47e8c9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8dde36eb-6b6c-4ac2-ad4d-16005c47e8c9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_321c280b-849f-42d7-969c-796c4b97d5be\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_321c280b-849f-42d7-969c-796c4b97d5be button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 26,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 26,\n        \"samples\": [\n          \"Oscar\",\n          \"Mike\",\n          \"Quentin\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Marketing\",\n          \"Sales\",\n          \"IT\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7553,\n        \"min\": 47000,\n        \"max\": 75000,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          51000,\n          52000,\n          61000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Join_Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2015-05-09 00:00:00\",\n        \"max\": \"2023-01-11 00:00:00\",\n        \"num_unique_values\": 26,\n        \"samples\": [\n          \"2018-07-18 00:00:00\",\n          \"2020-03-03 00:00:00\",\n          \"2015-05-09 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Years_with_Company\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 2,\n        \"max\": 10,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3,\n          9,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "id": "0O2KiyrD0V6h",
        "outputId": "cfa7bcba-c2cc-49d5-de61-8899fa54f945"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Salary                      Join_Date  Years_with_Company\n",
              "count     26.000000                             26           26.000000\n",
              "mean   58826.923077  2019-08-18 19:23:04.615384576            5.807692\n",
              "min    47000.000000            2015-05-09 00:00:00            2.000000\n",
              "25%    53250.000000            2018-04-03 06:00:00            4.250000\n",
              "50%    58500.000000            2020-01-08 12:00:00            5.500000\n",
              "75%    63500.000000            2021-01-06 18:00:00            7.000000\n",
              "max    75000.000000            2023-01-11 00:00:00           10.000000\n",
              "std     7553.730612                            NaN            2.039985"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a819aadf-bf78-4cd8-9395-81d878db3fc8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Salary</th>\n",
              "      <th>Join_Date</th>\n",
              "      <th>Years_with_Company</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>26.000000</td>\n",
              "      <td>26</td>\n",
              "      <td>26.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>58826.923077</td>\n",
              "      <td>2019-08-18 19:23:04.615384576</td>\n",
              "      <td>5.807692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>47000.000000</td>\n",
              "      <td>2015-05-09 00:00:00</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>53250.000000</td>\n",
              "      <td>2018-04-03 06:00:00</td>\n",
              "      <td>4.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>58500.000000</td>\n",
              "      <td>2020-01-08 12:00:00</td>\n",
              "      <td>5.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>63500.000000</td>\n",
              "      <td>2021-01-06 18:00:00</td>\n",
              "      <td>7.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>75000.000000</td>\n",
              "      <td>2023-01-11 00:00:00</td>\n",
              "      <td>10.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>7553.730612</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.039985</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a819aadf-bf78-4cd8-9395-81d878db3fc8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a819aadf-bf78-4cd8-9395-81d878db3fc8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a819aadf-bf78-4cd8-9395-81d878db3fc8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-91f02c97-846a-4287-a012-8f521b03e071\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-91f02c97-846a-4287-a012-8f521b03e071')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-91f02c97-846a-4287-a012-8f521b03e071 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27021.04650440602,\n        \"min\": 26.0,\n        \"max\": 75000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          58826.92307692308,\n          63500.0,\n          26.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Join_Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000000026\",\n        \"max\": \"2023-01-11 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"26\",\n          \"2019-08-18 19:23:04.615384576\",\n          \"2021-01-06 18:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Years_with_Company\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.795554403098782,\n        \"min\": 2.0,\n        \"max\": 26.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.8076923076923075,\n          7.0,\n          26.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c42We2qk0jai",
        "outputId": "bfea26ab-42e7-48a9-9116-b2a489b16e17"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Name', 'Department', 'Salary', 'Join_Date', 'Years_with_Company'], dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.DataFrame(data)"
      ],
      "metadata": {
        "id": "W-9HeQhN0ozH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['Join_Date'] = pd.to_datetime(df['Join_Date'])\n",
        "employees_after_2020 = df[df['Join_Date'] > '2020-01-01']['Name']\n",
        "print(\"Employees who joined after January 1, 2020:\")\n",
        "print(employees_after_2020)\n",
        "print(\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ffos8sfP1OnD",
        "outputId": "c2808cf5-d0bc-4d6b-a427-974c95ad4a7a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Employees who joined after January 1, 2020:\n",
            "0       Alice\n",
            "2     Charlie\n",
            "4         Eva\n",
            "6       Grace\n",
            "8         Ian\n",
            "9        Jane\n",
            "12       Mike\n",
            "13       Nina\n",
            "17     Rachel\n",
            "18      Steve\n",
            "20        Uma\n",
            "23     Xander\n",
            "24       Yara\n",
            "Name: Name, dtype: object\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "average_salary_by_department = df.groupby('Department')['Salary'].mean()\n",
        "print(\"Average salary for each department:\")\n",
        "print(average_salary_by_department)\n",
        "print(\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h2tlKgOg1ezb",
        "outputId": "1b2e952b-a80b-4739-9b43-3c1a6a94e242"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Average salary for each department:\n",
            "Department\n",
            "Finance      58500.000000\n",
            "HR           49100.000000\n",
            "IT           68142.857143\n",
            "Marketing    54500.000000\n",
            "Sales        59500.000000\n",
            "Name: Salary, dtype: float64\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "department_with_highest_average_salary = average_salary_by_department.mean()\n",
        "print(\"Department with the highest average salary:\")\n",
        "print(department_with_highest_average_salary)\n",
        "print(\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m4VkrK_B1gA3",
        "outputId": "ade7ba6c-13ef-4ff9-af08-45961fc74b33"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Department with the highest average salary:\n",
            "57948.571428571435\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "today = pd.to_datetime('2025-02-12')\n",
        "df['Years_with_Company'] = (today - df['Join_Date']).dt.days // 365\n",
        "print(\"DataFrame with 'Years_with_Company' column:\")\n",
        "print(df)\n",
        "print(\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "WNiB8mTO1pA1",
        "outputId": "e1039088-f972-4d22-f6ee-f86a98807539"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DataFrame with 'Years_with_Company' column:\n",
            "       Name Department  Salary  Join_Date  Years_with_Company\n",
            "0     Alice         HR   50000 2020-05-21                   4\n",
            "1       Bob         IT   60000 2019-03-15                   5\n",
            "2   Charlie    Finance   55000 2021-07-10                   3\n",
            "3     David         IT   70000 2018-11-01                   6\n",
            "4       Eva         HR   48000 2022-01-05                   3\n",
            "5     Frank    Finance   62000 2017-09-12                   7\n",
            "6     Grace         IT   65000 2020-06-30                   4\n",
            "7     Helen  Marketing   52000 2019-08-20                   5\n",
            "8       Ian      Sales   58000 2021-02-11                   4\n",
            "9      Jane         HR   51000 2020-12-01                   4\n",
            "10     Karl         IT   75000 2016-04-25                   8\n",
            "11    Laura    Finance   53000 2019-11-15                   5\n",
            "12     Mike      Sales   60000 2020-03-03                   4\n",
            "13     Nina  Marketing   57000 2022-04-10                   2\n",
            "14    Oscar         IT   67000 2018-07-18                   6\n",
            "15    Paula         HR   49500 2017-10-22                   7\n",
            "16  Quentin    Finance   61000 2015-05-09                   9\n",
            "17   Rachel      Sales   59000 2020-09-14                   4\n",
            "18    Steve         IT   72000 2021-01-19                   4\n",
            "19     Tina  Marketing   54000 2016-12-30                   8\n",
            "20      Uma         HR   47000 2023-01-11                   2\n",
            "21   Victor    Finance   56000 2018-02-27                   6\n",
            "22    Wendy      Sales   61000 2019-06-06                   5\n",
            "23   Xander         IT   68000 2020-08-08                   4\n",
            "24     Yara  Marketing   55000 2021-03-22                   3\n",
            "25     Zane    Finance   64000 2017-01-17                   8\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_sorted = df.sort_values(by='Years_with_Company', ascending=False)\n",
        "print(\"DataFrame sorted by 'Years_with_Company' in descending order:\")\n",
        "print(df_sorted)\n",
        "print(\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "irMLOUeJ2fvE",
        "outputId": "bb8f657e-6bb7-4816-ff16-deabc71df2fe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DataFrame sorted by 'Years_with_Company' in descending order:\n",
            "       Name Department  Salary  Join_Date  Years_with_Company\n",
            "16  Quentin    Finance   61000 2015-05-09                   9\n",
            "25     Zane    Finance   64000 2017-01-17                   8\n",
            "19     Tina  Marketing   54000 2016-12-30                   8\n",
            "10     Karl         IT   75000 2016-04-25                   8\n",
            "5     Frank    Finance   62000 2017-09-12                   7\n",
            "15    Paula         HR   49500 2017-10-22                   7\n",
            "3     David         IT   70000 2018-11-01                   6\n",
            "21   Victor    Finance   56000 2018-02-27                   6\n",
            "14    Oscar         IT   67000 2018-07-18                   6\n",
            "22    Wendy      Sales   61000 2019-06-06                   5\n",
            "7     Helen  Marketing   52000 2019-08-20                   5\n",
            "11    Laura    Finance   53000 2019-11-15                   5\n",
            "1       Bob         IT   60000 2019-03-15                   5\n",
            "23   Xander         IT   68000 2020-08-08                   4\n",
            "18    Steve         IT   72000 2021-01-19                   4\n",
            "17   Rachel      Sales   59000 2020-09-14                   4\n",
            "0     Alice         HR   50000 2020-05-21                   4\n",
            "12     Mike      Sales   60000 2020-03-03                   4\n",
            "9      Jane         HR   51000 2020-12-01                   4\n",
            "8       Ian      Sales   58000 2021-02-11                   4\n",
            "6     Grace         IT   65000 2020-06-30                   4\n",
            "4       Eva         HR   48000 2022-01-05                   3\n",
            "2   Charlie    Finance   55000 2021-07-10                   3\n",
            "24     Yara  Marketing   55000 2021-03-22                   3\n",
            "20      Uma         HR   47000 2023-01-11                   2\n",
            "13     Nina  Marketing   57000 2022-04-10                   2\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%matplotlib inline"
      ],
      "metadata": {
        "id": "n-vfuvTR3JMU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_sorted.plot(y='Salary', x='Years_with_Company', kind='barh')"
      ],
      "metadata": {
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 254
        },
        "id": "UOMDGBSK3XKB",
        "outputId": "f64d3840-a388-49d3-aa81-e64e79f1e27d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: ylabel='Years_with_Company'>"
            ]
          },
          "metadata": {},
          "execution_count": 94
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_sorted.to_csv('updated_employees.csv', index=False)\n",
        "print(\"DataFrame saved to 'updated_employees.csv'\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kTWHpoGN3hEG",
        "outputId": "1c3af235-160b-4ef8-87dd-f40bc423d183"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DataFrame saved to 'updated_employees.csv'\n"
          ]
        }
      ]
    }
  ]
}